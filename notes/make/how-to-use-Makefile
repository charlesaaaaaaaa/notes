1.make cannot kown how to do if not Makefile file with current dir.
	so we need to write a Makefile
	如果在当前的目录下没有makefile make命令是不知道怎么去做的
	所有我们需要去写一个makefile

2.
	<目标> : <前置条件>
	[tab] 	<命令>
	makefile由一系列（多个）规则构成，一个规则必需有一个目标，前置条件
	和命令是可以同时存在也可以只存在一个
----------------------------
	当makefile的目标文件已经存在于当前文件夹，则make时不会再构建对应的文件

	目标不单只可以是文件，也可以是一个操作。
	同样以操作为目标，如果当前文件夹下有对应的文件，该操作也不会生效
	此时可以声明该目标为’伪目标‘，如下
		.PHONY : clean
		[tab]  <cmd>
-----------------------------
	前置条件通常是一个文件，如果当前文件存在前置条件的文件，则操作会生效
	如果不存在，该条规则不会被执行，所以需要在该条规则前再定义生成该前置
	条件对应文件的规则

	如果前置条件不存在，则不管什么时候执行该条规则都会被执行

	当目标为伪目标时，可以在前置条件处填写多个文件，此时会执行该规则会生成多个
	与前置条件对应的文件
		前提是在该规则之前要先声明生成对应文件的规则，才可以一次生成多个文件
		source : file1 file2 file3

		make source
	       		= 
		make file1
		make file2
		make file3	
----------------------------
	命令是由一行或者多行shell命令组成的
	每行命令之前都要有一个tab，每一行的命令都是在不同的进程中运行的，所以如果后
	一行命令需要用到前一行命令的变量，则该两行命令要写在同一行内，用分号隔开
	source : 
		export a=asdfg ; echo $$a
	当然也可以使用 \ 在对应行的换行符前进行转义
	 source : 
                export a=asdfg ;\
		       	echo $$a

	还有就是在该条规则前加.ONESHELL:命令
	.ONESHELL:
	source : 
                export a=asdfg ;\
                        echo $$a

